#ifndef CFDICT_H
#define CFDICT_H

/// @file CfDict.h
/// @brief CfDict のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2005-2011, 2014 Yusuke Matsunaga
/// All rights reserved.


#include "ym/verilog.h"

#include "ElbFwd.h"
#include "HierName.h"


BEGIN_NAMESPACE_YM_VERILOG

//////////////////////////////////////////////////////////////////////
/// @class CfDict CfDict.h "CfDict.h"
/// @brief constant function を格納するハッシュ表
//////////////////////////////////////////////////////////////////////
class CfDict
{
public:

  /// @brief コンストラクタ
  CfDict() = default;

  /// @brief デストラクタ
  ~CfDict() = default;


public:
  //////////////////////////////////////////////////////////////////////
  // CfDict の関数
  //////////////////////////////////////////////////////////////////////

  /// @brief 関数を追加する．
  /// @param[in] scope 親のスコープ
  /// @param[in] name 名前
  /// @param[in] func 登録する関数
  void
  add(const VlNamedObj* scope,
      const char* name,
      ElbTaskFunc* func);

  /// @brief 名前から該当する要素を検索する．
  /// @param[in] scope 親のスコープ
  /// @param[in] name 名前
  ElbTaskFunc*
  find(const VlNamedObj* scope,
       const char* name) const;

  /// @brief 内容をクリアする．
  void
  clear();


private:
  //////////////////////////////////////////////////////////////////////
  // 下請け関数
  //////////////////////////////////////////////////////////////////////


private:
  //////////////////////////////////////////////////////////////////////
  // 内部で使用するデータ構造
  //////////////////////////////////////////////////////////////////////


private:
  //////////////////////////////////////////////////////////////////////
  // データメンバ
  //////////////////////////////////////////////////////////////////////

  // HierName をキーにしたハッシュ表
  unordered_map<HierName, ElbTaskFunc*, HierNameHash> mHash;

};


END_NAMESPACE_YM_VERILOG

#endif // CFDICT_H
